package com.denis.concurrency.sync_primitives.count_down_latch;

/**
 * CountDownLatch (замок с обратным отсчетом) предоставляет возможность любому количеству потоков
 * в блоке кода ожидать до тех пор, пока не завершится определенное количество операций, выполняющихся
 * в других потоках, перед тем как они будут «отпущены», чтобы продолжить свою деятельность.
 * В конструктор CountDownLatch (CountDownLatch(int count)) обязательно передается количество операций,
 * которое должно быть выполнено, чтобы замок «отпустил» заблокированные потоки.
 */
public class Race {
}
